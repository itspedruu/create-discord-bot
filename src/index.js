#! /usr/bin/env node

import fs from 'node:fs';
import path from 'node:path';
import os from 'node:os';
import { exec as callbackExec } from 'node:child_process';
import { promisify } from 'node:util';
import { fileURLToPath } from 'node:url';

const exec = promisify(callbackExec); 

const dirname = path.dirname(fileURLToPath(import.meta.url));
const gitIgnore = (await fs.promises.readFile(path.join(dirname, '../.gitignore'), 'utf8')).trim().split(os.EOL);
const projectName = process.argv[2];

async function copyFiles(level = '') {
  await fs.promises.mkdir(`./${projectName}/${level}`);

  const levelPath = path.join(dirname, '../template', level);
  const contents = await fs.promises.readdir(levelPath);

  for (let basename of contents) {
    if (gitIgnore.includes(basename)) {
      continue;
    }

    const contentPath = path.join(levelPath, basename);
    const isDirectory = (await fs.promises.lstat(contentPath)).isDirectory();
    
    if (isDirectory) {
      copyFiles(`${level}${basename}/`);
    } else {
      if (basename === '.env.example') {
        basename = '.env';
      }
      
      const destPath = `./${projectName}/${level}${basename}`;

      if (basename === 'package.json') {
        const packageJson = JSON.parse(await fs.promises.readFile(contentPath, 'utf8'));

        packageJson.name = projectName;
        packageJson.description = `Generated by @itspedruu/create-discord-bot`;

        await fs.promises.writeFile(destPath, JSON.stringify(packageJson, null, 4));
      } else {
        await fs.promises.cp(contentPath, `./${projectName}/${level}${basename}`);
      }
    }
  }
}

console.log('Copying files...');

await copyFiles();

console.log(`Please run: cd ${projectName} && npm i`);
